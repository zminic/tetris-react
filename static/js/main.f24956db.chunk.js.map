{"version":3,"sources":["Logic.ts","Square.tsx","Board.tsx","Info.tsx","Game.tsx","index.tsx"],"names":["Point","i","j","Object","classCallCheck","this","Square","color","isEmpty","shape_defs","def","Board","m","n","shape","nextShape","shapePosition","squares","gameOver","lineCount","Shape","createRandom","createShape","initSquares","createClass","key","value","clone","getHeight","Math","floor","getWidth","result","row","push","_this","getDef","map","p","a","b","cloneDeep","s_i","s_j","changed","complete","x","y","rotated","rotate","p_rotated","shape_def","_this2","length","rnd_def","random","props","classNames","data","react_default","createElement","className","join","style","backgroundColor","borderColor","Fragment","square","src_Square","Info","src_Board","type","onClick","onNewGame","onPause","Game","possibleConstructorReturn","getPrototypeOf","call","board","timer","onTimerTick","state","gameState","moveDown","handleKeyDown","event","keyCode","moveShapeDown","clearCompleted","console","log","setState","getNextShape","moveShapeLeft","moveShapeRight","rotateShape","togglePause","stopTimer","window","clearInterval","startTimer","setInterval","bind","assertThisInitialized","getBoardWidth","getBoardHeight","getInfoWidth","getGameWidth","logic","document","addEventListener","removeEventListener","_this3","target","blur","width","float","src_Info","pause","newGame","Component","ReactDOM","render","Game_Game","getElementById"],"mappings":"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","file":"static/js/main.f24956db.chunk.js","sourcesContent":["import { cloneDeep } from 'lodash';\r\n\r\nclass Point\r\n{\r\n    constructor(public readonly i: number, public readonly j: number) {}\r\n}\r\n\r\nexport class Square\r\n{\r\n    constructor(public color: string, public isEmpty: boolean) {}\r\n}\r\n\r\nconst shape_defs = [\r\n    {\r\n        color: \"blueviolet\",\r\n        def: [\r\n            [0, 1, 0],\r\n            [1, 1, 1]\r\n        ]\r\n    },\r\n    {\r\n        color: \"red\",\r\n        def: [\r\n            [1, 1, 0],\r\n            [0, 1, 1]\r\n        ]\r\n    },\r\n    {\r\n        color: \"limegreen\",\r\n        def: [\r\n            [0, 1, 1],\r\n            [1, 1, 0]\r\n        ]\r\n    },\r\n    {\r\n        color: \"aqua\",\r\n        def: [\r\n            [1, 1, 1, 1]\r\n        ]\r\n    },\r\n    {\r\n        color: \"goldenrod\",\r\n        def: [\r\n            [1, 1],\r\n            [0, 1],\r\n            [0, 1]\r\n        ]\r\n    },\r\n    {\r\n        color: \"dodgerblue\",\r\n        def: [\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 0]\r\n        ]\r\n    },\r\n    {\r\n        color: \"gold\",\r\n        def: [\r\n            [1, 1],\r\n            [1, 1]\r\n        ]\r\n    },\r\n];\r\n\r\nexport class Board\r\n{\r\n    private shape!: Shape;\r\n    private nextShape!: Shape;\r\n    private shapePosition!: Point;\r\n    public squares!: Square[][];\r\n    public gameOver: boolean = false;\r\n    public lineCount: number = 0;\r\n\r\n    constructor(public m: number, public n: number)\r\n    {\r\n        this.nextShape = Shape.createRandom();\r\n        this.createShape();\r\n        this.initSquares();\r\n    }\r\n\r\n    private createShape()\r\n    {\r\n        this.shape = this.nextShape.clone();\r\n        this.nextShape = Shape.createRandom();\r\n\r\n        // by default position new shape center top\r\n        this.shapePosition = new Point(-1 * this.shape.getHeight(), Math.floor((this.m - this.shape.getWidth()) / 2));\r\n    }\r\n\r\n    private initSquares()\r\n    {\r\n        let result = [];\r\n\r\n        for (let i = 0; i < this.n; i++)\r\n        {\r\n            let row = [];\r\n\r\n            for (let j = 0; j < this.m; j++)\r\n                row.push(new Square('', true));\r\n\r\n            result.push(row);\r\n        }\r\n\r\n        this.squares = result;\r\n    }\r\n\r\n    getNextShape(): Square[][]\r\n    {\r\n        return this.nextShape.getDef().map(row => row.map(value => new Square(value===0 ? '': this.nextShape.color, value === 0)));\r\n    }\r\n\r\n    moveShapeDown(): boolean\r\n    {\r\n        const p = this.shapePosition;\r\n        const def = this.shape.getDef();\r\n        const a = this.shape.getWidth();\r\n        const b = this.shape.getHeight();\r\n        let result = cloneDeep(this.squares);\r\n\r\n        for (let i = b - 1; i >= 0; i--)\r\n        for (let j = 0; j < a; j++)\r\n        {\r\n            let s_i = p.i + i;\r\n            let s_j = p.j + j;\r\n\r\n            if (s_i + 1 >= this.n) {\r\n                this.createShape();\r\n\r\n                return false;\r\n            }\r\n\r\n            if (def[i][j] === 1 && s_i + 1 >= 0)\r\n            {\r\n                if (s_i + 1 === 0)\r\n                {\r\n                    result[s_i + 1][s_j] = new Square(this.shape.color, false);\r\n                }\r\n                else\r\n                {\r\n                    if (!result[s_i + 1][s_j].isEmpty)\r\n                    {\r\n                        if (p.i < 0) // game over\r\n                            this.gameOver = true;\r\n                        else\r\n                            this.createShape();\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    result[s_i + 1][s_j] = new Square(result[s_i][s_j].color, result[s_i][s_j].isEmpty);\r\n                    result[s_i][s_j] = new Square('', true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.squares = result;\r\n        this.shapePosition = new Point(this.shapePosition.i + 1, this.shapePosition.j);\r\n\r\n        return true;\r\n    }\r\n\r\n    clearCompleted(): boolean\r\n    {\r\n        let result = cloneDeep(this.squares);\r\n        let changed = false;\r\n        let i = this.n - 1;\r\n\r\n        while (i >= 0)\r\n        {\r\n            let complete: boolean = true;\r\n\r\n            for (let j = 0; j < this.m; j++)\r\n                complete = complete && !result[i][j].isEmpty;\r\n\r\n            if (complete)\r\n            {\r\n                changed = true;\r\n                this.lineCount++;\r\n\r\n                for (let x = i; x >= 1; x--)\r\n                    for(let y = 0; y < this.m; y++)\r\n                        result[x][y] = result[x - 1][y];\r\n            }\r\n            else i--;\r\n        }\r\n\r\n        if (changed) this.squares = result;\r\n\r\n        return changed;\r\n    }\r\n\r\n    moveShapeLeft(): boolean\r\n    {\r\n        const p = this.shapePosition;\r\n        const def = this.shape.getDef();\r\n        const a = this.shape.getWidth();\r\n        const b = this.shape.getHeight();\r\n        let result = cloneDeep(this.squares);\r\n\r\n        for (let i = b - 1; i >= 0; i--)\r\n        for (let j = 0; j < a; j++)\r\n        {\r\n            let s_i = p.i + i;\r\n            let s_j = p.j + j;\r\n\r\n            if (s_j - 1 < 0) return false;\r\n\r\n            if (def[i][j] === 1 && s_i >= 0)\r\n            {\r\n                if (!result[s_i][s_j - 1].isEmpty)\r\n                    return false;\r\n\r\n                result[s_i][s_j - 1] = new Square(result[s_i][s_j].color, result[s_i][s_j].isEmpty);\r\n                result[s_i][s_j] = new Square('', true);\r\n            }\r\n        }\r\n\r\n        this.squares = result;\r\n        this.shapePosition = new Point(this.shapePosition.i, this.shapePosition.j - 1);\r\n\r\n        return true;\r\n    }\r\n\r\n    moveShapeRight(): boolean\r\n    {\r\n        const p = this.shapePosition;\r\n        const def = this.shape.getDef();\r\n        const a = this.shape.getWidth();\r\n        const b = this.shape.getHeight();\r\n        let result = cloneDeep(this.squares);\r\n\r\n        for (let i = b - 1; i >= 0; i--)\r\n        for (let j = a - 1; j >= 0; j--)\r\n        {\r\n            let s_i = p.i + i;\r\n            let s_j = p.j + j;\r\n\r\n            if (s_j + 1 >= this.m) return false;\r\n\r\n            if (def[i][j] === 1 && s_i >= 0)\r\n            {\r\n                if (!result[s_i][s_j + 1].isEmpty)\r\n                    return false;\r\n\r\n                result[s_i][s_j + 1] = new Square(result[s_i][s_j].color, result[s_i][s_j].isEmpty);\r\n                result[s_i][s_j] = new Square('', true);\r\n            }\r\n        }\r\n\r\n        this.squares = result;\r\n        this.shapePosition = new Point(this.shapePosition.i, this.shapePosition.j + 1);\r\n\r\n        return true;\r\n    }\r\n\r\n    rotateShape(): boolean\r\n    {\r\n        const p = this.shapePosition;\r\n        const def = this.shape.getDef();\r\n        const a = this.shape.getWidth();\r\n        const b = this.shape.getHeight();\r\n\r\n        let rotated = this.shape.clone().rotate();\r\n\r\n        // compensate width and height when rotating\r\n        let p_rotated = new Point(p.i - (rotated.getHeight() - b), p.j + rotated.getWidth() >= this.m ? p.j - (rotated.getWidth() - a) : p.j);\r\n\r\n        // work on cloned squares\r\n        let result = cloneDeep(this.squares);\r\n\r\n        // clear previous shape\r\n        for (let i = 0; i < b; i++)\r\n        for (let j = 0; j < a; j++)\r\n        {\r\n            let s_i = p.i + i;\r\n            let s_j = p.j + j;\r\n\r\n            if (def[i][j] === 1 && s_i >= 0 && !result[s_i][s_j].isEmpty)\r\n            {\r\n                result[s_i][s_j].isEmpty = true;\r\n                result[s_i][s_j].color = '';\r\n            }\r\n        }\r\n\r\n        // draw rotated shape\r\n        for (let i = 0; i < rotated.getHeight(); i++)\r\n        for (let j = 0; j < rotated.getWidth(); j++)\r\n        {\r\n            let s_i = p_rotated.i + i;\r\n            let s_j = p_rotated.j + j;\r\n\r\n            if (rotated.getDef()[i][j] === 1 && s_i >= 0)\r\n            {\r\n                if (!result[s_i][s_j].isEmpty) // collision\r\n                    return false;\r\n\r\n                result[s_i][s_j] = new Square(this.shape.color, false);\r\n            }\r\n        }\r\n\r\n        // update shape and shape position if everyting went ok\r\n        this.shapePosition = new Point(p_rotated.i, p_rotated.j);\r\n        this.shape.rotate();\r\n        this.squares = result;\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class Shape\r\n{\r\n    private constructor(private shape_def: Array<Array<number>>, public readonly color: string) {}\r\n\r\n    public clone(): Shape\r\n    {\r\n        return new Shape(this.shape_def, this.color);\r\n    }\r\n\r\n    public static createRandom(): Shape\r\n    {\r\n        let rnd_def = shape_defs[Math.floor(Math.random() * shape_defs.length)];\r\n\r\n        return new Shape(rnd_def.def, rnd_def.color);\r\n    }\r\n\r\n    getWidth = () => this.shape_def[0].length;\r\n    getHeight = () => this.shape_def.length;\r\n    getDef = () => this.shape_def;\r\n\r\n    /** rotate shape right 90 deg */\r\n    rotate() : Shape\r\n    {\r\n        const m = this.getWidth();\r\n        const n = this.getHeight();\r\n\r\n        let result = [];\r\n\r\n        for (let i = 0; i < m; i++)\r\n        {\r\n            let row = [];\r\n\r\n            for (let j = n - 1; j >= 0; j--)\r\n                row.push(this.shape_def[j][i]);\r\n\r\n            result.push(row);\r\n        }\r\n\r\n        this.shape_def = result;\r\n\r\n        return this;\r\n    }\r\n}","import React from 'react';\r\nimport * as logic from \"./Logic\";\r\n\r\ninterface ISquareProps\r\n{\r\n    data: logic.Square\r\n}\r\n\r\nconst Square: React.FC<ISquareProps> = (props) => \r\n{\r\n    let classNames = ['square'];\r\n\r\n    if (props.data.isEmpty) classNames.push('empty');\r\n\r\n    return (\r\n        <div className={classNames.join(' ')} style={{backgroundColor: props.data.color, borderColor: props.data.color}}>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\nimport * as logic from './Logic';\r\n\r\ninterface IBoardProps\r\n{\r\n    squares: logic.Square[][],\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst Board: React.FC<IBoardProps> = (props) => {\r\n    const squares = props.squares.map((row, i) =>\r\n        (\r\n            <React.Fragment key={i}>\r\n            {row.map((square, j) =>\r\n                <Square\r\n                    key={j}\r\n                    data={square}>\r\n                </Square>\r\n            )}\r\n            <div className=\"clear\" />\r\n            </React.Fragment>\r\n        )\r\n    );\r\n\r\n    return (\r\n      <div className=\"board\" style={props.style}>\r\n          {squares}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport * as logic from './Logic';\r\nimport Board from './Board';\r\n\r\ninterface IInfoProps\r\n{\r\n    nextShape: logic.Square[][];\r\n    style?: React.CSSProperties;\r\n    onPause?: (event: React.MouseEvent) => void;\r\n    onNewGame?: (event: React.MouseEvent) => void;\r\n    lineCount: number\r\n}\r\n\r\nconst Info: React.FC<IInfoProps> = (props) => {\r\n\r\n    return (\r\n      <div className=\"info\" style={props.style}>\r\n        <div>\r\n            <fieldset>\r\n                <legend>Next</legend>\r\n                <Board squares={props.nextShape}></Board>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <legend>Actions</legend>\r\n                <p><button type=\"button\" onClick={props.onNewGame} >New game</button></p>\r\n                <p><button type=\"button\" onClick={props.onPause}>Pause</button></p>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <legend>Stats</legend>\r\n                <p>Lines: <span className=\"highlight\">{props.lineCount}</span></p>\r\n            </fieldset>\r\n            \r\n            <fieldset>\r\n                <legend>Keyboard controls</legend>\r\n                <p>Left: <span className=\"highlight\">Left arrow</span></p>\r\n                <p>Right: <span className=\"highlight\">Right arrow</span></p>\r\n                <p>Rotate: <span className=\"highlight\">Up arrow</span></p>\r\n                <p>Speed up: <span className=\"highlight\">Down arrow</span></p>\r\n                <p>Pause: <span className=\"highlight\">P</span></p>\r\n                <p>Drop: <span className=\"highlight\">Space</span></p>\r\n            </fieldset>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Info;","import React, {Component} from 'react';\r\nimport './Game.css';\r\nimport * as logic from \"./Logic\";\r\nimport Board from './Board';\r\nimport Info from './Info';\r\n\r\ninterface IGameState\r\n{\r\n  squares: logic.Square[][],\r\n  nextShape: logic.Square[][],\r\n  gameState: \"new\" | \"paused\" | \"running\" | \"gameOver\",\r\n  lineCount: number\r\n}\r\n\r\nexport default class Game extends Component<{}, IGameState>\r\n{  \r\n  private board: logic.Board;\r\n  private timer: number = 0;\r\n\r\n  constructor(props: any)\r\n  {\r\n    super(props);\r\n\r\n    this.board = new logic.Board(10, 20);\r\n\r\n    this.state = { \r\n      squares: this.board.squares,\r\n      nextShape: this.board.getNextShape(),\r\n      gameState: \"new\",\r\n      lineCount: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  onTimerTick = () => {\r\n    if (this.state.gameState === \"running\")\r\n      this.moveDown();\r\n  }\r\n\r\n  handleKeyDown = (event: KeyboardEvent) => {\r\n\r\n    if (this.state.gameState !== 'running' && this.state.gameState !== 'paused') return;\r\n\r\n    if (event.keyCode === 32) // space\r\n    {\r\n      while(this.board.moveShapeDown()){}\r\n\r\n      if (!this.board.gameOver)\r\n        this.board.clearCompleted();\r\n\r\n      console.log(this.board.squares);\r\n\r\n      this.setState((state) => ({ \r\n        squares: this.board.squares,\r\n        nextShape: this.board.getNextShape(),\r\n        gameState: this.board.gameOver ? \"gameOver\" : state.gameState,\r\n        lineCount: this.board.lineCount\r\n      }));\r\n    }\r\n    else if (event.keyCode === 37) // left\r\n    {\r\n      if (this.board.moveShapeLeft())\r\n        this.setState({ squares: this.board.squares});\r\n    }\r\n    else if (event.keyCode === 39) // right\r\n    {\r\n      if (this.board.moveShapeRight())\r\n        this.setState({ squares: this.board.squares});\r\n    }\r\n    else if (event.keyCode === 38) // up (rotate)\r\n    {\r\n      if (this.board.rotateShape())\r\n        this.setState({ squares: this.board.squares});\r\n    }\r\n    else if (event.keyCode === 40) // down\r\n    {\r\n      this.moveDown();\r\n    }\r\n    else if (event.keyCode === 80) // p (pause)\r\n    {\r\n      this.togglePause();\r\n    }\r\n  }\r\n\r\n  moveDown()\r\n  {\r\n    if (this.board.moveShapeDown())\r\n    {\r\n      this.setState({squares: this.board.squares});\r\n    }\r\n    else\r\n    {\r\n      if (this.board.clearCompleted())\r\n        this.setState({ squares: this.board.squares});\r\n\r\n      this.setState((state) => ({\r\n        nextShape: this.board.getNextShape(),\r\n        gameState: this.board.gameOver ? \"gameOver\" : state.gameState,\r\n        lineCount: this.board.lineCount\r\n      }));\r\n    }\r\n  }\r\n\r\n  stopTimer = () => window.clearInterval(this.timer);\r\n  startTimer =() => {\r\n    this.stopTimer();\r\n    this.timer = window.setInterval(this.onTimerTick.bind(this), 500);\r\n  };\r\n\r\n  togglePause()\r\n  {\r\n    this.setState((state) => {\r\n      if (state.gameState === \"paused\")\r\n      {\r\n        this.startTimer();\r\n        return { gameState: \"running\" };\r\n      }\r\n      else if (state.gameState === \"running\")\r\n      {\r\n        this.stopTimer();\r\n        return {gameState: \"paused\"};\r\n      }\r\n\r\n      return null;\r\n    });\r\n  }\r\n\r\n  pause(event: React.MouseEvent)\r\n  {\r\n    this.togglePause();\r\n\r\n    // loose focus to prevent space button from clicking it\r\n    (event.target as any).blur();\r\n  }\r\n\r\n  newGame(event: React.MouseEvent)\r\n  {\r\n    console.log('new game');\r\n\r\n    this.board = new logic.Board(10, 20);\r\n\r\n    this.setState({ \r\n      squares: this.board.squares,\r\n      nextShape: this.board.getNextShape(),\r\n      gameState: \"running\",\r\n      lineCount: 0\r\n    });\r\n\r\n    this.startTimer();\r\n\r\n    // loose focus to prevent space button from clicking it\r\n    (event.target as any).blur();\r\n  }\r\n\r\n  getBoardWidth = () => this.board.m * 35;\r\n  getBoardHeight = () => this.board.n * 35;\r\n  getInfoWidth = () => 320;\r\n  getGameWidth = () => this.getBoardWidth() + this.getInfoWidth() + 10;\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"game\" style={{width: this.getGameWidth()}}>\r\n        <Board squares={this.state.squares} style={{ width: this.getBoardWidth(), float: \"left\"}}></Board>\r\n        <Info \r\n          nextShape={this.state.nextShape} \r\n          style={{ width: this.getInfoWidth(), float: \"left\"}} \r\n          lineCount={this.state.lineCount}\r\n          onPause={this.pause.bind(this)}\r\n          onNewGame={this.newGame.bind(this)}></Info> \r\n        <div className=\"clear\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));"],"sourceRoot":""}